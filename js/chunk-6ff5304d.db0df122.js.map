{"version":3,"sources":["webpack:///./node_modules/_file-saver@2.0.2@file-saver/dist/FileSaver.min.js?5b37","webpack:///./node_modules/_file-saver@2.0.2@file-saver/dist/FileSaver.min.js","webpack:///./node_modules/_base64-js@1.3.1@base64-js/index.js","webpack:///./node_modules/_script-loader@0.7.2@script-loader/addScript.js","webpack:///./node_modules/_isarray@1.0.0@isarray/index.js","webpack:///./node_modules/_ieee754@1.1.13@ieee754/index.js","webpack:///./node_modules/_buffer@4.9.2@buffer/index.js"],"names":["module","exports","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","getLens","b64","Error","validLen","indexOf","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","output","push","join","extraBytes","parts","maxChunkLength","len2","src","log","error","console","isIE","attachEvent","addEventListener","execScript","eval","call","toString","isArray","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","LN2","base64","ieee754","typedArraySupport","__proto__","prototype","foo","subarray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","this","allocUnsafe","from","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","undefined","checked","string","isEncoding","actual","slice","fromArrayLike","array","byteOffset","obj","isBuffer","copy","isnan","type","data","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","n","bidirectionalIndexOf","val","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","global","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","apply","equals","inspect","str","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","fromCharCode","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","replace","trim","units","leadSurrogate","byteArray","hi","lo","dst"],"mappings":"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","file":"js/chunk-6ff5304d.db0df122.js","sourcesContent":["require(\"!!/Users/liuhao/Desktop/projectDemo/vue3-admin/node_modules/_script-loader@0.7.2@script-loader/addScript.js\")(require(\"!!/Users/liuhao/Desktop/projectDemo/vue3-admin/node_modules/_raw-loader@0.5.1@raw-loader/index.js!/Users/liuhao/Desktop/projectDemo/vue3-admin/node_modules/_file-saver@2.0.2@file-saver/dist/FileSaver.min.js\"))","module.exports = \"(function(a,b){if(\\\"function\\\"==typeof define&&define.amd)define([],b);else if(\\\"undefined\\\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\\\"use strict\\\";function b(a,b){return\\\"undefined\\\"==typeof b?b={autoBom:!1}:\\\"object\\\"!=typeof b&&(console.warn(\\\"Deprecated: Expected third argument to be a object\\\"),b={autoBom:!b}),b.autoBom&&/^\\\\s*(?:text\\\\/\\\\S*|application\\\\/xml|\\\\S*\\\\/\\\\S*\\\\+xml)\\\\s*;.*charset\\\\s*=\\\\s*utf-8/i.test(a.type)?new Blob([\\\"\\\\uFEFF\\\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\\\"GET\\\",b),e.responseType=\\\"blob\\\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\\\"could not download file\\\")},e.send()}function d(a){var b=new XMLHttpRequest;b.open(\\\"HEAD\\\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\\\"click\\\"))}catch(c){var b=document.createEvent(\\\"MouseEvents\\\");b.initMouseEvent(\\\"click\\\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\\\"object\\\"==typeof window&&window.window===window?window:\\\"object\\\"==typeof self&&self.self===self?self:\\\"object\\\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\\\"object\\\"!=typeof window||window!==f?function(){}:\\\"download\\\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\\\"a\\\");g=g||b.name||\\\"download\\\",j.download=g,j.rel=\\\"noopener\\\",\\\"string\\\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\\\"_blank\\\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\\\"msSaveOrOpenBlob\\\"in navigator?function(f,g,h){if(g=g||f.name||\\\"download\\\",\\\"string\\\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\\\"a\\\");i.href=f,i.target=\\\"_blank\\\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\\\"\\\",\\\"_blank\\\"),e&&(e.document.title=e.document.body.innerText=\\\"downloading...\\\"),\\\"string\\\"==typeof a)return c(a,b,d);var g=\\\"application/octet-stream\\\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\\\/[\\\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\\\"object\\\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\\\"data:attachment/file;\\\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\\\"undefined\\\"!=typeof module&&(module.exports=a)});\\n\\n//# sourceMappingURL=FileSaver.min.js.map\"","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function(src) {\n\tfunction log(error) {\n\t\t(typeof console !== \"undefined\")\n\t\t&& (console.error || console.log)(\"[Script Loader]\", error);\n\t}\n\n\t// Check for IE =< 8\n\tfunction isIE() {\n\t\treturn typeof attachEvent !== \"undefined\" && typeof addEventListener === \"undefined\";\n\t}\n\n\ttry {\n\t\tif (typeof execScript !== \"undefined\" && isIE()) {\n\t\t\texecScript(src);\n\t\t} else if (typeof eval !== \"undefined\") {\n\t\t\teval.call(null, src);\n\t\t} else {\n\t\t\tlog(\"EvalError: No eval function available\");\n\t\t}\n\t} catch (error) {\n\t\tlog(error);\n\t}\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n"],"sourceRoot":""}